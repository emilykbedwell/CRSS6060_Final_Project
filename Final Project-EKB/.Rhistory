library(dplyr)
library(tidyr)
library(sf)
library(ggplot2)
library(viridis)
library(ggthemes)
library(tibble)
#install.packages("tibble")
ggplot()+
geom_sf(data = st_all,
aes(fill=snyield), color=NA)+
scale_fill_viridis_d(option="C")+
theme_map()
ggsave("../data/Rojas_yield_st_16-1.geojson",
width = 6, height = 4)
ggplot()+
geom_sf(data = st_all,
aes(fill=snyield), color=NA)+
scale_fill_viridis_d(option="C")+
title("Rojas Field Yield 2016"))
ggplot()+
geom_sf(data = st_all,
aes(fill=snyield), color=NA)+
scale_fill_viridis_d(option="C")+
title("Rojas Field Yield 2016")
ggplot()+
geom_sf(data = st_all,
aes(fill=snyield), color=NA)+
scale_fill_viridis_d(option="C")+
title(Rojas Field Yield 2016)
ggplot()+
geom_sf(data = st_all,
aes(fill=snyield), color=NA)+
scale_fill_viridis_d(option="C")+
theme_map()
ggsave("../data/Rojas_yield_st_16-1.geojson",
width = 6, height = 4)
knitr::opts_chunk$set(echo = TRUE)
# Packages
library(dplyr)
library(tidyr)
library(sf)
library(ggplot2)
library(viridis)
library(ggthemes)
library(tibble)
#install.packages("tibble")
yieldic16 <- read_sf("../output/Rojas_Yield16_Clean_ip.geojson")
yieldic16
summary(yieldic16)
s_16 <- yieldic16 %>%
mutate(medianyield_lbac=median(ipyield_lbac)) %>%
mutate(snyield=case_when(
ipyield_lbac >= medianyield_lbac ~ "high",
ipyield_lbac < medianyield_lbac ~ "low"
)) %>%
dplyr::select(ipyield_lbac, snyield=snyield, geometry)
s_16
s_16_map <- ggplot()+
geom_sf(data = s_16,
aes(fill=snyield), color=NA)+
scale_fill_viridis_d(option="E")+
labs(title="2016")+
theme_map()+
theme(legend.position = "right")
s_16_map
ggsave("../output/Rojas_Yield16_spatialstability.png",
width = 7, height = 3.5)
st_all <- s_16
st_all
ggplot()+
geom_sf(data = st_all,
aes(fill=snyield), color=NA)+
scale_fill_viridis_d(option="C")+
theme_map()
ggsave("../data/Rojas_yield_st_16-1.geojson",
width = 6, height = 4)
vrn <- zone_yield %>%
pivot_longer(-c(zone, geometry)) %>%
group_by(zone) %>%
# Defining yield potential
summarise(yieldpotential=quantile(value,.9)*0.0167) %>%  #yield potential in bu/ac
mutate(totalnrate_lbsac=200+ yieldpotential*0.06) %>%
# Adjust total rate in 25% downwards for following peanuts
mutate(totalnrate_adj_lbsac=totalnrate_lbsac*0.75) %>%
# Calculate pre-plant rate
mutate(pp_totalnrate_adj_lbsac=totalnrate_adj_lbsac*.33) %>%
# Calculate ~2/3 as portion to be applied in-season (Assuming a single pre-plant rate was applied to both zones)
mutate(is_totalnrate_adj_lbsac=totalnrate_adj_lbsac-50) %>%
# Calculate product rate when using UAN solution 28% N
# UAN 28% has 3 lbs N per gallon of product (see chunk below)
mutate(uanrate_galac=is_totalnrate_adj_lbsac/3,
uanrate_galac=round(uanrate_galac,1))
#mutate(yieldpotential_buac=yieldpotential)
vrn
knitr::opts_chunk$set(echo = TRUE)
# Packages
library(dplyr)
library(tidyr)
library(janitor)
library(readr)
library(sf) #vector manipulation
library(ggplot2)
library(viridis)
library(ggthemes)
library(gstat) #IDW
library(stars) #raster manipulation
library(terra) #topographical variables
library(patchwork) #combining multiple plots
library(tibble) #rownames to column
mytheme_map <-
theme_map()+
theme(legend.position = "right",
panel.background = element_rect(fill="gray80",
color=NA),
plot.background = element_rect(fill="gray80",
color=NA),
legend.title = element_text(size=14),
legend.text = element_text(size=12))
elev <- read_csv("../data/Deer Run1 Elevation.csv")
elev
elev_w <- elev %>%
clean_names() %>%
rename(elev_ft=elevation) %>%
mutate(elev_m=elev_ft*0.3048) %>%
dplyr::select(elev_m,
longitude,
latitude) %>%
st_as_sf(coords = c("longitude", "latitude")) %>%
st_set_crs(value = 4326) %>%
st_transform(crs = 6345)
elev_w
summary(elev_w)
ggplot()+
geom_sf(data = elev_w,
aes(color=elev_m), size=.01)+
scale_fill_gradient(low="black", high="white")+
mytheme_map
boundary_w <- read_sf("../data/boundary/DR1_boundary.geojson") %>%
st_transform(crs = 6345)
boundary_w
# grid in vector format
grid_r <-  boundary_w %>%
st_make_grid(cellsize = 10) %>%
st_as_sf() %>%
st_rasterize(dx=10, dy=10) %>%
st_crop(boundary_w)
grid_r
ggplot()+
geom_stars(data = grid_r)+
mytheme_map
idw_mod <- gstat(formula = elev_m ~ 1,
data = elev_w)
idw_mod
idw_pred <- predict(idw_mod, grid_r)
idw_pred
elev_map <- ggplot()+
geom_stars(data = idw_pred)+
geom_sf(data=boundary_w, fill=NA)+
scale_fill_gradient(low="black", high="white")+
labs(fill="Elev. (m)")+
mytheme_map
elev_map
slope <- idw_pred %>%
dplyr::select(elev_m=var1.pred) %>%
# Transforming to SpatRast for slope computation
terra::rast() %>%
terra::terrain("slope", unit="radians") %>%
# Transforming back into stars (so works with ggplot)
st_as_stars() %>%
st_set_crs(value =  6345) #%>%
# Transforming to pct
#mutate(pct=tan(values)*100) %>%
#dplyr::select(pct)
slope
slope_map <- ggplot()+
geom_stars(data = slope)+
geom_sf(data=boundary_w, fill=NA)+
scale_fill_gradient(low="black", high="white")+
labs(fill="Slope\n(rad)")+
mytheme_map
slope_map
aspect <- idw_pred %>%
dplyr::select(elev_m=var1.pred) %>%
terra::rast() %>%
terra::terrain("aspect", unit="radians") %>%
st_as_stars() %>%
st_set_crs(value =  6345)
aspect
aspect_map <- ggplot()+
geom_stars(data = aspect)+
geom_sf(data=boundary_w, fill=NA)+
scale_fill_gradient(low="black", high="white")+
labs(fill="Aspect\n(rad.)")+
mytheme_map
aspect_map
flowdir <- idw_pred %>%
dplyr::select(elev_m=var1.pred) %>%
terra::rast() %>%
terra::terrain("flowdir", unit="radians") %>%
st_as_stars() %>%
st_set_crs(value =  6345)
flowdir
flowdir_map <- ggplot()+
geom_stars(data = flowdir)+
geom_sf(data=boundary_w, fill=NA)+
scale_fill_gradient(low="black", high="white")+
labs(fill="Flow dir.\n(degree)")+
mytheme_map
flowdir_map
ggplot()+
geom_stars(data = flowdir %>%
mutate(values=factor(values)))+
geom_sf(data=boundary_w, fill=NA)+
scale_fill_discrete()+
labs(fill="Flow dir.\n(degree)")+
mytheme_map+
facet_wrap(~values)+
theme(legend.position = "none")
slope_spv <- slope %>%
# Transforming from starts to raster to work with shade function
as("Raster") %>%
rast()
aspect_spv <- aspect %>%
as("Raster") %>%
rast()
hill <- shade(slope_spv, aspect_spv) %>%
st_as_stars()
hillshade_map <- ggplot()+
geom_stars(data=hill)+
scale_fill_gradient(low="black", high="white")+
geom_sf(data = boundary_w, fill=NA)+
labs(fill="Hill\nshade")+
mytheme_map
hillshade_map
elev_map + slope_map + aspect_map + flowdir_map + hillshade_map
ggsave("../output/Rojas_terrain.png", width = 10, height = 6)
elev_v <- idw_pred %>%
st_as_sf(as_points = F,
merge = F) %>%
dplyr::select(elev_m=var1.pred)
elev_v
slope_v <- slope %>%
st_as_sf(as_points = F,
merge = F) %>%
dplyr::select(slope=values)
slope_v
aspect_v <- aspect %>%
st_as_sf(as_points = F,
merge = F) %>%
dplyr::select(aspect=values)
aspect_v
flowdir_v <- flowdir %>%
st_as_sf(as_points = F,
merge = F) %>%
dplyr::select(flowdir=values)
flowdir_v
hillshade_v <- hill %>%
st_as_sf(as_points = F,
merge = F) %>%
dplyr::select(hillshade=values)
hillshade_v
terrain_v <- elev_v %>%
st_join(slope_v,
join = st_equals,
left = T) %>%
st_join(aspect_v,
join = st_equals,
left = T) %>%
st_join(flowdir_v,
join = st_equals,
left = T) %>%
st_join(hillshade_v,
join = st_equals,
left = T)
terrain_v %>%
summary()
knitr::opts_chunk$set(echo = TRUE)
# Packages
library(dplyr)
library(tidyr)
library(janitor)
library(readr)
library(sf) #vector manipulation
library(ggplot2)
library(viridis)
library(ggthemes)
library(gstat) #IDW
library(stars) #raster manipulation
library(terra) #topographical variables
library(patchwork) #combining multiple plots
library(tibble) #rownames to column
mytheme_map <-
theme_map()+
theme(legend.position = "right",
panel.background = element_rect(fill="gray80",
color=NA),
plot.background = element_rect(fill="gray80",
color=NA),
legend.title = element_text(size=14),
legend.text = element_text(size=12))
eca <- read_csv("../data/Deer Run1 Soil EC Data.csv")
eca
eca_w <- eca %>%
clean_names() %>%
dplyr::select(x=longitude,
y=latitude,
eca30_dsm=shallow_eca,
eca90_dsm=deep_eca)  %>%
st_as_sf(coords = c("x", "y")) %>%
st_set_crs(value = 4326) %>%
st_transform(crs = 6345)
eca_w
eca_w %>%
ggplot()+
geom_sf(aes(color=eca30_dsm),
size=.5)+
scale_color_viridis_b()+
mytheme_map
eca_w %>%
ggplot()+
geom_sf(aes(color=eca90_dsm),
size=.5)+
scale_color_viridis_b()+
mytheme_map
boundary_w <- read_sf("../data/boundary/DR1_boundary.geojson") %>%
st_transform(crs = 6345)
boundary_w
# grid in vector format
grid_r <-  boundary_w %>%
st_make_grid(cellsize = 10) %>%
st_as_sf() %>%
st_rasterize(dx=10, dy=10) %>%
st_crop(boundary_w)
grid_r
ggplot()+
geom_stars(data = grid_r)+
mytheme_map
eca30_idw_mod <- gstat(formula = eca30_dsm ~ 1,
data = eca_w)
eca30_idw_mod
eca30_idw_pred <- predict(eca30_idw_mod, grid_r)
eca30_idw_pred
eca30_map <- ggplot()+
geom_stars(data = eca30_idw_pred)+
scale_fill_viridis_b()+
geom_sf(data=boundary_w, fill=NA)+
labs(fill="ECa\n0-30 cm\n(dS/m)")+
mytheme_map
eca30_map
eca90_idw_mod <- gstat(formula = eca90_dsm ~ 1,
data = eca_w)
eca90_idw_mod
eca90_idw_pred <- predict(eca90_idw_mod, grid_r)
eca90_idw_pred
eca90_map <- ggplot()+
geom_stars(data = eca90_idw_pred)+
scale_fill_viridis_b()+
geom_sf(data=boundary_w, fill=NA)+
labs(fill="ECa\n0-90 cm\n(dS/m)")+
mytheme_map
eca90_map
eca30_map + eca90_map
ggsave("../output/Rojas_soileca.png", width = 6, height = 3)
eca30_v <- eca30_idw_pred %>%
st_as_sf(as_points = F,
merge = F) %>%
dplyr::select(eca30_dsm=var1.pred)
eca30_v
eca90_v <- eca90_idw_pred %>%
st_as_sf(as_points = F,
merge = F) %>%
dplyr::select(eca90_dsm=var1.pred)
eca90_v
eca_v <- eca30_v %>%
st_join(eca90_v,
join = st_equals,
left = T)
eca_v
knitr::opts_chunk$set(echo = TRUE)
#install.packages("factoextra")
#install.packages("NbClust")
#install.packages("ggpubr")
# Packages
library(dplyr)
library(tidyr)
library(readr)
library(sf) #vector manipulation
library(ggplot2)
library(viridis)
library(ggthemes)
library(patchwork) #combining multiple plots
library(factoextra)
library(NbClust)
library(ggpubr)
terrain_v <- read_sf("../data/Rojas_terrain_v.geojson")
terrain_v
eca_v <- read_sf("../data/Rojas_eca_v.geojson")
eca_v
boundary_w <- read_sf("../data/boundary/DR1_boundary.geojson") %>%
st_transform(crs = 6345)
boundary_w
all_v <- terrain_v %>%
st_join(eca_v,
join = st_equals,
left = T)
all_v
summary(all_v)
all_v_n <- all_v %>%
drop_na() %>%
dplyr::select(-flowdir, -geometry)
all_v_n
mod_km <- kmeans(all_v_n,
centers = 4,
nstart = 10)
mod_km
# Total error x k
fviz_nbclust(all_v_n,
method = "wss",
k.max = 10,
FUNcluster = kmeans) #3 to 5
# Silhouette width
fviz_nbclust(all_v_n,
method = "s",
k.max = 10,
FUNcluster = kmeans) #2
# Voting from 26 indices
bestk <- NbClust(all_v_n,
distance = "euclidean",
method ="kmeans",
index= "all",
min.nc = 2,
max.nc = 6)
knitr::opts_chunk$set(echo = TRUE)
# Packages
library(dplyr)
library(tidyr)
library(readr)
library(sf) #vector manipulation
library(ggplot2)
library(viridis)
library(ggthemes)
mytheme_map <-
theme_map()+
theme(legend.position = "right",
panel.background = element_rect(fill="gray80",
color=NA),
plot.background = element_rect(fill="gray80",
color=NA),
legend.title = element_text(size=14),
legend.text = element_text(size=12))
yieldic16 <- read_sf("../output/Rojas_Yield16_Clean_ip.geojson") %>%
mutate(yield16_lbac=ipyield_lbac*.4) %>%
dplyr::select(yield16_lbac, geometry)
yieldic16
summary(yieldic16)
zone_st <- read_sf("../data/Rojas_zone_st.geojson") %>%
dplyr::select(zone, geometry)
zone_st
zone_yield <- zone_st %>%
st_join(yieldic16,
join = st_equals,
left = T
)
zone_yield
vrn <- zone_yield %>%
pivot_longer(-c(zone, geometry)) %>%
group_by(zone) %>%
# Defining yield potential
summarise(yieldpotential=quantile(value,.9)*0.0167) %>%  #yield potential in bu/ac
mutate(totalnrate_lbsac=200+ yieldpotential*0.06) %>%
# Adjust total rate in 25% downwards for following peanuts
mutate(totalnrate_adj_lbsac=totalnrate_lbsac*0.75) %>%
# Calculate pre-plant rate
mutate(pp_totalnrate_adj_lbsac=totalnrate_adj_lbsac*.33) %>%
# Calculate ~2/3 as portion to be applied in-season (Assuming a single pre-plant rate was applied to both zones)
mutate(is_totalnrate_adj_lbsac=totalnrate_adj_lbsac-50) %>%
# Calculate product rate when using UAN solution 28% N
# UAN 28% has 3 lbs N per gallon of product (see chunk below)
mutate(uanrate_galac=is_totalnrate_adj_lbsac/3,
uanrate_galac=round(uanrate_galac,1))
#mutate(yieldpotential_buac=yieldpotential)
vrn
uan28density_lbsgal <- 10.67
uan28Nconc_pct <- 0.28
uan28_lbsNgal <- uan28density_lbsgal * uan28Nconc_pct
uan28_lbsNgal #~3 lbs N/gal of UAN28%
vrn %>%
mutate(area_m2=st_area(.)) %>%
mutate(area_ac=as.numeric(area_m2/4047)) %>%
# Will ask for 20% more than recommended to have a bit extra
mutate(uan_gal=(uanrate_galac*area_ac)*1.2) %>%
summarise(totaluan_gal=sum(uan_gal),
totaluan_gal=round(totaluan_gal,0))
vrn_v <- zone_yield %>%
left_join(vrn %>%
st_drop_geometry()
)
vrn_v
vrn_v %>%
mutate(uanrate_galac=factor(uanrate_galac)) %>%
ggplot()+
geom_sf(aes(fill=uanrate_galac,
color=uanrate_galac))+
labs(title="VRN Rx - UAN 28% rate",
fill="UAN rate\n(gal/ac)",
color="UAN rate\n(gal/ac)")+
mytheme_map
ggsave("../output/Rojas_VRN.png",
width = 4,
height = 4
)
