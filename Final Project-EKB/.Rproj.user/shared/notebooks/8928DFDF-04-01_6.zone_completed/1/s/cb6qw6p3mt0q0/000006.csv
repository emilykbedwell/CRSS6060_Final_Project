"0","fviz_nbclust(bestk) # 2 and 3 on std and raw"
"2","Warning in if (class(best_nc) == ""numeric"") print(best_nc) else if (class(best_nc) ==  :"
"2","
 "
"2"," the condition has length > 1 and only the first element will be used
"
"2","Warning in if (class(best_nc) == ""matrix"") .viz_NbClust(x, print.summary,  :"
"2","
 "
"2"," the condition has length > 1 and only the first element will be used
"
"2","Warning in if (class(best_nc) == ""numeric"") print(best_nc) else if (class(best_nc) ==  :"
"2","
 "
"2"," the condition has length > 1 and only the first element will be used
"
"2","Warning in if (class(best_nc) == ""matrix"") { :"
"2","
 "
"2"," the condition has length > 1 and only the first element will be used
"
"1","Among all indices: 
===================
"
"1","*"
"1"," "
"1","2"
"1"," "
"1","proposed "
"1"," "
"1","0"
"1"," "
"1","as the best number of clusters
"
"1","*"
"1"," "
"1","1"
"1"," "
"1","proposed "
"1"," "
"1","1"
"1"," "
"1","as the best number of clusters
"
"1","*"
"1"," "
"1","10"
"1"," "
"1","proposed "
"1"," "
"1","2"
"1"," "
"1","as the best number of clusters
"
"1","*"
"1"," "
"1","9"
"1"," "
"1","proposed "
"1"," "
"1","3"
"1"," "
"1","as the best number of clusters
"
"1","*"
"1"," "
"1","2"
"1"," "
"1","proposed "
"1"," "
"1","4"
"1"," "
"1","as the best number of clusters
"
"1","*"
"1"," "
"1","1"
"1"," "
"1","proposed "
"1"," "
"1","5"
"1"," "
"1","as the best number of clusters
"
"1","*"
"1"," "
"1","1"
"1"," "
"1","proposed "
"1"," "
"1","6"
"1"," "
"1","as the best number of clusters
"
"1","
Conclusion
=========================
"
"1","* According to the majority rule, the best number of clusters is "
"1"," "
"1","2"
"1"," "
"1",".

"
